import { Config, ConfigLoader } from "./config";
import { Source } from "./context";
import { EventDump, TokenDump } from "./engine";
import { Parser } from "./parser";
import { Report } from "./reporter";
import { RuleDocumentation } from "./rule";
declare class HtmlValidate {
    private globalConfig;
    protected configLoader: ConfigLoader;
    constructor(options?: any);
    validateString(str: string): Report;
    validateSource(source: Source): Report;
    validateFile(filename: string): Report;
    dumpTokens(filename: string): TokenDump[];
    dumpEvents(filename: string): EventDump[];
    dumpTree(filename: string): string[];
    getRuleDocumentation(ruleId: string, config?: Config, context?: any): RuleDocumentation;
    getParserFor(source: Source): Parser;
    getConfigFor(filename: string): Config;
    flushConfigCache(filename?: string): void;
}
export default HtmlValidate;
