"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const dom_1 = require("../dom");
const rule_1 = require("../rule");
const validTypes = ["submit", "button", "reset"];
class ButtonType extends rule_1.Rule {
    documentation() {
        return {
            description: 'HTML button defaults to `type="submit"` when attribute is missing or invalid which may not be the intended type.\n\nA common side-effect of this is when pressing enter in a form field unexpectedly prevents form submission and instead executes the action this button is bound to.',
            url: rule_1.ruleDocumentationUrl(__filename),
        };
    }
    setup() {
        this.on("dom:ready", (event) => {
            const buttons = event.document.getElementsByTagName("button");
            buttons.forEach((node) => {
                const attr = node.getAttribute("type");
                if (attr === null) {
                    this.report(node, "Button is missing type attribute");
                    return;
                }
                if (attr.value instanceof dom_1.DynamicValue) {
                    return;
                }
                if (validTypes.indexOf(attr.value.toLowerCase()) === -1) {
                    this.report(node, `Button has invalid type "${attr.value}"`, attr.location);
                }
            });
        });
    }
}
module.exports = ButtonType;
