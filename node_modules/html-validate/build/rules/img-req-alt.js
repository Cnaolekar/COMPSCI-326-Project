"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const rule_1 = require("../rule");
const defaults = {
    allowEmpty: true,
    alias: [],
};
class ImgReqAlt extends rule_1.Rule {
    documentation() {
        return {
            description: "Both HTML5 and WCAG 2.0 requires images to have a alternative text for each image.",
            url: rule_1.ruleDocumentationUrl(__filename),
        };
    }
    constructor(options) {
        super(Object.assign({}, defaults, options));
        if (!Array.isArray(this.options.alias)) {
            this.options.alias = [this.options.alias];
        }
    }
    setup() {
        this.on("dom:ready", (event) => {
            const images = event.document.getElementsByTagName("img");
            images.forEach((node) => {
                const alt = node.getAttributeValue("alt");
                if (alt || (alt === "" && this.options.allowEmpty)) {
                    return;
                }
                for (const attr of this.options.alias) {
                    if (node.getAttribute(attr)) {
                        return;
                    }
                }
                this.report(node, "<img> is missing required alt attribute");
            });
        });
    }
}
module.exports = ImgReqAlt;
