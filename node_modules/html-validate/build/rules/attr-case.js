"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const rule_1 = require("../rule");
const defaults = {
    style: "lowercase",
};
class AttrCase extends rule_1.Rule {
    constructor(options) {
        super(Object.assign({}, defaults, options));
        [this.pattern, this.lettercase] = parseStyle(this.options.style);
    }
    documentation() {
        return {
            description: `Attribute name must be ${this.options.style}.`,
            url: rule_1.ruleDocumentationUrl(__filename),
        };
    }
    setup() {
        this.on("attr", (event) => {
            const letters = event.key.replace(/[^a-z]+/gi, "");
            if (!letters.match(this.pattern)) {
                this.report(event.target, `Attribute "${event.key}" should be ${this.lettercase}`);
            }
        });
    }
}
function parseStyle(style) {
    switch (style.toLowerCase()) {
        case "lowercase":
            return [/^[a-z]*$/, "lowercase"];
        case "uppercase":
            return [/^[A-Z]*$/, "uppercase"];
        default:
            throw new Error(`Invalid style "${style}" for "attr-case" rule`);
    }
}
module.exports = AttrCase;
