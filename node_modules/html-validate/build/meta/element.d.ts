export interface PermittedGroup {
    exclude?: string[];
}
export declare type PropertyExpression = string | [string, any];
export declare type PermittedEntry = string | any[] | PermittedGroup;
export declare type Permitted = PermittedEntry[];
export declare type PermittedOrder = string[];
export interface PermittedAttribute {
    [key: string]: Array<string | RegExp>;
}
export interface MetaElement {
    tagName: string;
    metadata: boolean | PropertyExpression;
    flow: boolean | PropertyExpression;
    sectioning: boolean | PropertyExpression;
    heading: boolean | PropertyExpression;
    phrasing: boolean | PropertyExpression;
    embedded: boolean | PropertyExpression;
    interactive: boolean | PropertyExpression;
    deprecated: boolean | string;
    void: boolean;
    transparent: boolean;
    implicitClosed: string[];
    attributes: PermittedAttribute;
    deprecatedAttributes: string[];
    permittedContent: Permitted;
    permittedDescendants: Permitted;
    permittedOrder: PermittedOrder;
    [key: string]: boolean | PropertyExpression | Permitted | PermittedOrder | PermittedAttribute;
}
export interface ElementTable {
    [tagName: string]: MetaElement;
}
