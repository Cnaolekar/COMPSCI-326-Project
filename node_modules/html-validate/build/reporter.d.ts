import { Location, Source } from "./context";
import { HtmlElement } from "./dom";
import { Rule } from "./rule";
export interface Message {
    ruleId: string;
    severity: number;
    message: string;
    offset: number;
    line: number;
    column: number;
    size: number;
    context?: any;
}
export interface Result {
    messages: Message[];
    filePath: string;
    errorCount?: number;
    warningCount?: number;
    source?: string;
}
export interface Report {
    valid: boolean;
    results: Result[];
}
export declare class Reporter {
    result: {
        [filename: string]: Message[];
    };
    constructor();
    static merge(reports: Report[]): Report;
    add(node: HtmlElement, rule: Rule, message: string, severity: number, location: Location, context?: any): void;
    addManual(filename: string, message: Message): void;
    save(sources?: Source[]): Report;
    protected isValid(): boolean;
}
export default Reporter;
